// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model user{
  id Int @id @default(autoincrement())
  firstname String
  lastname String
  email String @unique
  password String
  codeVerfication Int?
  createdAt DateTime @default(now())
  descreption String? 
  intrest String?
  adresse String?
  imageUrl String?

  active  Boolean @default(false)
  article Article[]
}
model category{
  id Int @id  @default(autoincrement())
  name String @unique
  descreption String
  imageUrl String
  article Article[]
}
model Article{
  id Int @id @default(autoincrement())
  title String 
  slug String? @unique
  contenu String
  langue String 
  image String
  summary  String
  published Boolean  @default(false)
  publishedAt DateTime?
  createdAt DateTime @default(now())
  userId Int
  user user  @relation(fields: [userId],references: [id],onDelete: Cascade)
  categoryId Int 
  category category @relation(fields: [categoryId],references: [id],onDelete: Cascade)
  favorite favorite[]
}
model favorite{
  id Int @id @default(autoincrement())
  userId Int
  articleId Int
  article Article @relation(fields: [articleId], references: [id])
  date DateTime @default(now())
}